{"ast":null,"code":"var _jsxFileName = \"/Users/elinakirspile/moviesapp/src/components/Movies/MovieList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport _ from \"lodash\";\nimport axios from \"axios\";\nimport \"./MovieList.css\";\nimport MovieCard from \"./MovieCard\";\nimport LoadingMovieCard from \"./LoadingMovieCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api_key = \"f3855f8bdde19bb1dd9b18e80bc383b6\";\n\n//\n\n//component for rendering movie objects\nconst MovieList = () => {\n  _s();\n  //manage the state of movies' categories\n  const [categories, setCategories] = useState([]);\n  const [currentCategory, setCurrentCategory] = useState([]);\n  const [movies, setMovies] = useState([]);\n  const [sortingOption, setSortingOption] = useState({\n    by: \"default\",\n    order: \"asc\"\n  });\n  const [sortedMovies, setSortedMovies] = useState([]);\n  const [likedMovies, setLikedMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  //get current page from URL\n  const [pageNum, setPage] = useState(1);\n  const navigate = useNavigate();\n  const [totalPages, setTotalPages] = useState(0);\n  const skeletons = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\n  let filteredMovies = [];\n\n  //MOVIES DATA FETCHING\n\n  //fetch movies' categories on the 1st components render\n  useEffect(() => {\n    fetch(`https://api.themoviedb.org/3/genre/movie/list?api_key=${api_key}`).then(response => response.json()).then(data => {\n      setCategories(data.genres);\n    });\n  }, []);\n\n  //get the id of current category\n  const handleCategoryClick = category => {\n    setCurrentCategory(category.id);\n    setPage(1); //when state of the category changes, reset the page state to 1\n    setMovies([]); //when state of the category changes, empty movies array\n  };\n  useEffect(() => {\n    setIsLoading(true);\n    if (currentCategory) {\n      axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=${api_key}&with_genres=${currentCategory}&with_original_language=en&include_adult=false&page=${pageNum}`).then(response => {\n        if (movies.length !== 0) {\n          setMovies(prevMovies => [...prevMovies, ...response.data.results]);\n        } else {\n          setMovies(response.data.results);\n        }\n        setTotalPages(response.data.total_pages);\n        console.log(response.data);\n        //console.log(totalPages);\n        setIsLoading(false);\n      });\n    } else {\n      axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=${api_key}&with_original_language=en&include_adult=false&page=${pageNum}`).then(response => {\n        if (movies.length !== 0) {\n          setMovies(prevMovies => [...prevMovies, ...response.data.results]);\n        } else {\n          setMovies(response.data.results);\n        }\n        setTotalPages(response.data.total_pages);\n        //console.log(response.data);\n        //console.log(totalPages);\n        isLoading(false);\n      });\n    }\n  }, [currentCategory, pageNum]);\n\n  //handle Page Change\n\n  const handlePageChange = () => {\n    //check if movie data is available and page number is less than total pages number\n    if (!isLoading && movies && pageNum < totalPages) {\n      //increase the value of page by 1\n      const nextPage = pageNum + 1;\n      //set page state with the next page\n      setPage(nextPage);\n      //navigate to the next page, use nextPage instead of pageNum to navigate to correct new page\n      navigate(`?&with_genres=${currentCategory}&page=${nextPage}`);\n    }\n  };\n\n  //SORTING MOVIES FEATURE\n\n  //get movie sorting option\n  const handleOptionChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setSortingOption(prev => {\n      return {\n        ...prev,\n        [name]: value\n      };\n    });\n  };\n  console.log(sortingOption);\n\n  //sort movies by sorting option with lodash library\n\n  useEffect(() => {\n    if (sortingOption.by !== \"default\" && movies) {\n      const sortedMovies = _.orderBy(movies, [sortingOption.by], [sortingOption.order]);\n      setSortedMovies(sortedMovies);\n    } else {\n      setSortedMovies(movies);\n    }\n  }, [sortingOption, movies]);\n\n  //SAVING FAVOURITE MOVIES FEATURE\n\n  //get liked movie\n  const handleLike = movie => {\n    const addedMovies = [...likedMovies];\n    addedMovies.push({\n      movie: movie\n    });\n    setLikedMovies(addedMovies); //figure out how to not add movie that is already in likedMovies\n  };\n  console.log(likedMovies);\n\n  //INFINITE SCROLLING FEATURE\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movies_data_container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie_categories\",\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"categories\",\n        children: categories.map((category, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: currentCategory === category.id ? \"active\" : \"\",\n          onClick: () => {\n            handleCategoryClick(category);\n          },\n          children: category.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie_options\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"option\",\n          name: \"by\",\n          onChange: handleOptionChange,\n          value: sortingOption.by,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"default\",\n            children: \"Sort By\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"release_date\",\n            children: \"Release Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"vote_average\",\n            children: \"Rating\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"option\",\n          name: \"order\",\n          onChange: handleOptionChange,\n          value: sortingOption.order,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"asc\",\n            children: \"Asceding\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"desc\",\n            children: \"Descending\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie_list\",\n      children: [isLoading && skeletons.map(skeletonNum => /*#__PURE__*/_jsxDEV(LoadingMovieCard, {}, skeletonNum, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 13\n      }, this)), sortedMovies.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n        movie: movie,\n        handleLike: handleLike\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePageChange,\n      children: \"Load More\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieList, \"6FD2hvwf0RqXKFtem0oxtcDQhL0=\", false, function () {\n  return [useNavigate];\n});\n_c = MovieList;\nexport default MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","_","axios","MovieCard","LoadingMovieCard","jsxDEV","_jsxDEV","api_key","MovieList","_s","categories","setCategories","currentCategory","setCurrentCategory","movies","setMovies","sortingOption","setSortingOption","by","order","sortedMovies","setSortedMovies","likedMovies","setLikedMovies","isLoading","setIsLoading","pageNum","setPage","navigate","totalPages","setTotalPages","skeletons","filteredMovies","fetch","then","response","json","data","genres","handleCategoryClick","category","id","get","length","prevMovies","results","total_pages","console","log","handlePageChange","nextPage","handleOptionChange","event","name","value","target","prev","orderBy","handleLike","movie","addedMovies","push","className","children","map","index","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onChange","skeletonNum","_c","$RefreshReg$"],"sources":["/Users/elinakirspile/moviesapp/src/components/Movies/MovieList.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport _ from \"lodash\";\nimport axios from \"axios\";\nimport \"./MovieList.css\";\nimport MovieCard from \"./MovieCard\";\nimport LoadingMovieCard from \"./LoadingMovieCard\";\n\nconst api_key = \"f3855f8bdde19bb1dd9b18e80bc383b6\";\n\n//\n\n//component for rendering movie objects\nconst MovieList = () => {\n  //manage the state of movies' categories\n  const [categories, setCategories] = useState([]);\n  const [currentCategory, setCurrentCategory] = useState([]);\n  const [movies, setMovies] = useState([]);\n  const [sortingOption, setSortingOption] = useState({\n    by: \"default\",\n    order: \"asc\",\n  });\n  const [sortedMovies, setSortedMovies] = useState([]);\n  const [likedMovies, setLikedMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  //get current page from URL\n  const [pageNum, setPage] = useState(1);\n\n  const navigate = useNavigate();\n  const [totalPages, setTotalPages] = useState(0);\n\n  const skeletons = [\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n  ];\n  let filteredMovies = [];\n\n  //MOVIES DATA FETCHING\n\n  //fetch movies' categories on the 1st components render\n  useEffect(() => {\n    fetch(`https://api.themoviedb.org/3/genre/movie/list?api_key=${api_key}`)\n      .then((response) => response.json())\n      .then((data) => {\n        setCategories(data.genres);\n      });\n  }, []);\n\n  //get the id of current category\n  const handleCategoryClick = (category) => {\n    setCurrentCategory(category.id);\n    setPage(1); //when state of the category changes, reset the page state to 1\n    setMovies([]); //when state of the category changes, empty movies array\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    if (currentCategory) {\n      axios\n        .get(\n          `https://api.themoviedb.org/3/discover/movie?api_key=${api_key}&with_genres=${currentCategory}&with_original_language=en&include_adult=false&page=${pageNum}`\n        )\n        .then((response) => {\n          if (movies.length !== 0) {\n            setMovies((prevMovies) => [\n              ...prevMovies,\n              ...response.data.results,\n            ]);\n          } else {\n            setMovies(response.data.results);\n          }\n\n          setTotalPages(response.data.total_pages);\n          console.log(response.data);\n          //console.log(totalPages);\n          setIsLoading(false);\n        });\n    } else {\n      axios\n        .get(\n          `https://api.themoviedb.org/3/discover/movie?api_key=${api_key}&with_original_language=en&include_adult=false&page=${pageNum}`\n        )\n        .then((response) => {\n          if (movies.length !== 0) {\n            setMovies((prevMovies) => [\n              ...prevMovies,\n              ...response.data.results,\n            ]);\n          } else {\n            setMovies(response.data.results);\n          }\n          setTotalPages(response.data.total_pages);\n          //console.log(response.data);\n          //console.log(totalPages);\n          isLoading(false);\n        });\n    }\n  }, [currentCategory, pageNum]);\n\n  //handle Page Change\n\n  const handlePageChange = () => {\n    //check if movie data is available and page number is less than total pages number\n    if (!isLoading && movies && pageNum < totalPages) {\n      //increase the value of page by 1\n      const nextPage = pageNum + 1;\n      //set page state with the next page\n      setPage(nextPage);\n      //navigate to the next page, use nextPage instead of pageNum to navigate to correct new page\n      navigate(`?&with_genres=${currentCategory}&page=${nextPage}`);\n    }\n  };\n\n  //SORTING MOVIES FEATURE\n\n  //get movie sorting option\n  const handleOptionChange = (event) => {\n    const { name, value } = event.target;\n    setSortingOption((prev) => {\n      return { ...prev, [name]: value };\n    });\n  };\n  console.log(sortingOption);\n\n  //sort movies by sorting option with lodash library\n\n  useEffect(() => {\n    if (sortingOption.by !== \"default\" && movies) {\n      const sortedMovies = _.orderBy(\n        movies,\n        [sortingOption.by],\n        [sortingOption.order]\n      );\n      setSortedMovies(sortedMovies);\n    } else {\n      setSortedMovies(movies);\n    }\n  }, [sortingOption, movies]);\n\n  //SAVING FAVOURITE MOVIES FEATURE\n\n  //get liked movie\n  const handleLike = (movie) => {\n    const addedMovies = [...likedMovies];\n    addedMovies.push({ movie: movie });\n    setLikedMovies(addedMovies); //figure out how to not add movie that is already in likedMovies\n  };\n\n  console.log(likedMovies);\n\n  //INFINITE SCROLLING FEATURE\n\n  return (\n    <div className=\"movies_data_container\">\n      <div className=\"movie_categories\">\n        <ul className=\"categories\">\n          {categories.map((category, index) => (\n            <li\n              className={currentCategory === category.id ? \"active\" : \"\"}\n              key={index}\n              onClick={() => {\n                handleCategoryClick(category);\n              }}\n            >\n              {category.name}\n            </li>\n          ))}\n        </ul>\n        <div className=\"movie_options\">\n          <select\n            className=\"option\"\n            name=\"by\"\n            onChange={handleOptionChange}\n            value={sortingOption.by}\n          >\n            <option value=\"default\">Sort By</option>\n            <option value=\"release_date\">Release Date</option>\n            <option value=\"vote_average\">Rating</option>\n          </select>\n          <select\n            className=\"option\"\n            name=\"order\"\n            onChange={handleOptionChange}\n            value={sortingOption.order}\n          >\n            <option value=\"asc\">Asceding</option>\n            <option value=\"desc\">Descending</option>\n          </select>\n        </div>\n      </div>\n      <div className=\"movie_list\">\n        {isLoading &&\n          skeletons.map((skeletonNum) => (\n            <LoadingMovieCard key={skeletonNum} />\n          ))}\n\n        {sortedMovies.map((movie) => (\n          <MovieCard key={movie.id} movie={movie} handleLike={handleLike} />\n        ))}\n      </div>\n      <button onClick={handlePageChange}>Load More</button>\n    </div>\n  );\n};\n\nexport default MovieList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}