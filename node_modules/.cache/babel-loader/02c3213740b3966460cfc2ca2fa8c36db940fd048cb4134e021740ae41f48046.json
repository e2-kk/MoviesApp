{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{useNavigate}from\"react-router-dom\";import axios from\"axios\";import\"./MovieList.css\";import MovieCard from\"./MovieCard\";import LoadingMovieCard from\"./LoadingMovieCard\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const api_key=\"f3855f8bdde19bb1dd9b18e80bc383b6\";const MovieList=_ref=>{let{likedMovies,setLikedMovies,handleLike}=_ref;//manage the state of movies' categories\nconst[categories,setCategories]=useState([]);const[currentCategory,setCurrentCategory]=useState([]);const[movies,setMovies]=useState([]);const[sortingOption,setSortingOption]=useState({by:\"default\",order:\"asc\"});const[sortedMovies,setSortedMovies]=useState([]);const[isLoading,setIsLoading]=useState(false);const[pageNum,setPage]=useState(1);const navigate=useNavigate();const[totalPages,setTotalPages]=useState(0);const skeletons=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20];//MOVIES DATA FETCHING\n//fetch movies' categories on the 1st components render\nuseEffect(()=>{fetch(\"https://api.themoviedb.org/3/genre/movie/list?api_key=\".concat(api_key)).then(response=>response.json()).then(data=>{setCategories(data.genres);});},[]);//get the id of current category\nconst handleCategoryClick=category=>{setCurrentCategory(category.id);setPage(1);//when state of the category changes, reset the page state to 1\nsetMovies([]);//when state of the category changes, empty movies array\nsetSortedMovies([]);setSortingOption({by:\"default\",order:\"asc\"});};useEffect(()=>{setIsLoading(true);if(currentCategory.length!==0){axios.get(\"https://api.themoviedb.org/3/discover/movie?api_key=\".concat(api_key,\"&with_genres=\").concat(currentCategory,\"&primary_release_date.gte=2000-01-01&primary_release_date.lte=2024-12-31&with_original_language=en&vote_count.gte=180.0&page=\").concat(pageNum)).then(response=>{if(movies.length!==0){setMovies(prevMovies=>[...prevMovies,...response.data.results]);}else{setMovies(response.data.results);setIsLoading(false);}setTotalPages(response.data.total_pages);console.log(response.data);//console.log(totalPages);\nsetIsLoading(false);});}else{axios.get(\"https://api.themoviedb.org/3/discover/movie?api_key=\".concat(api_key,\"&with_original_language=en&primary_release_date.gte=2000-01-01&primary_release_date.lte=2024-12-31&vote_count.gte=180.0&page=\").concat(pageNum)).then(response=>{if(movies.length!==0){setMovies(prevMovies=>[...prevMovies,...response.data.results]);}else{setMovies(response.data.results);setIsLoading(false);}setTotalPages(response.data.total_pages);//console.log(totalPages);\nsetIsLoading(false);});}},[currentCategory,pageNum]);//console.log(movies);\n//handle Page Change\nconst handlePageChange=()=>{//check if movie data is available and page number is less than total pages number\nif(!isLoading&&movies&&pageNum<totalPages){//increase the value of page by 1\nconst nextPage=pageNum+1;//set page state with the next page\nsetPage(nextPage);//navigate to the next page, use nextPage instead of pageNum to navigate to correct new page\nnavigate(\"?&with_genres=\".concat(currentCategory,\"&page=\").concat(nextPage));}};//SORTING MOVIES FEATURE\n//get movie sorting option\nconst handleOptionChange=event=>{const{name,value}=event.target;setSortingOption(prev=>{return{...prev,[name]:value};});setSortedMovies([]);};//sort movies API request by sorting option\nuseEffect(()=>{if(sortingOption.by===\"release_date\"&&sortingOption.order===\"asc\"){axios.get(\"https://api.themoviedb.org/3/discover/movie?api_key=\".concat(api_key,\"&with_genres=\").concat(currentCategory,\"&with_origin_country=US&sort_by=primary_release_date.asc&with_original_language=en&vote_count.gte=180.0&primary_release_date.gte=2000-01-01&primary_release_date.lte=2024-12-31&page=\").concat(pageNum)).then(response=>{if(sortedMovies.length!==0){setSortedMovies(prevMovies=>[...prevMovies,...response.data.results]);}else{setSortedMovies(response.data.results);}});}else if(sortingOption.by===\"release_date\"&&sortingOption.order===\"desc\"){axios.get(\"https://api.themoviedb.org/3/discover/movie?api_key=\".concat(api_key,\"&with_genres=\").concat(currentCategory,\"&with_origin_country=US&sort_by=primary_release_date.desc&with_original_language=en&vote_count.gte=180.0&primary_release_date.gte=2000-01-01&primary_release_date.lte=2024-12-31&page=\").concat(pageNum)).then(response=>{if(sortedMovies.length!==0){setSortedMovies(prevMovies=>[...prevMovies,...response.data.results]);}else{setSortedMovies(response.data.results);}});}else if(sortingOption.by===\"vote_average\"&&sortingOption.order===\"asc\"){axios.get(\"https://api.themoviedb.org/3/discover/movie?api_key=\".concat(api_key,\"&with_genres=\").concat(currentCategory,\"&with_origin_country=US&sort_by=vote_average.asc&with_original_language=en&vote_count.gte=180.0&primary_release_date.gte=2000-01-01&primary_release_date.lte=2024-12-31&page=\").concat(pageNum)).then(response=>{if(sortedMovies.length!==0){setSortedMovies(prevMovies=>[...prevMovies,...response.data.results]);}else{setSortedMovies(response.data.results);}});}else if(sortingOption.by===\"vote_average\"&&sortingOption.order===\"desc\"){axios.get(\"https://api.themoviedb.org/3/discover/movie?api_key=\".concat(api_key,\"&with_genres=\").concat(currentCategory,\"&with_origin_country=US&sort_by=vote_average.desc&with_original_language=en&vote_count.gte=180.0&primary_release_date.gte=2000-01-01&primary_release_date.lte=2024-12-31&page=\").concat(pageNum)).then(response=>{if(sortedMovies.length!==0){setSortedMovies(prevMovies=>[...prevMovies,...response.data.results]);}else{setSortedMovies(response.data.results);}});}else{setSortedMovies(movies);}},[sortingOption,movies,currentCategory]);//SAVING MOVIES TO WATCHLIST FEATURE\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"movies_data_container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"movie_categories\",children:[/*#__PURE__*/_jsx(\"ul\",{className:\"categories\",children:categories.map((category,index)=>/*#__PURE__*/_jsx(\"li\",{className:currentCategory===category.id?\"active\":\"\",onClick:()=>{handleCategoryClick(category);},children:category.name},index))}),/*#__PURE__*/_jsxs(\"div\",{className:\"movie_options\",children:[/*#__PURE__*/_jsxs(\"select\",{className:\"option\",name:\"by\",onChange:handleOptionChange,value:sortingOption.by,children:[/*#__PURE__*/_jsx(\"option\",{value:\"default\",children:\"Sort By\"}),/*#__PURE__*/_jsx(\"option\",{value:\"release_date\",children:\"Release Date\"}),/*#__PURE__*/_jsx(\"option\",{value:\"vote_average\",children:\"Rating\"})]}),/*#__PURE__*/_jsxs(\"select\",{className:\"option\",name:\"order\",onChange:handleOptionChange,value:sortingOption.order,children:[/*#__PURE__*/_jsx(\"option\",{value:\"asc\",children:\"Asceding\"}),/*#__PURE__*/_jsx(\"option\",{value:\"desc\",children:\"Descending\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"movie_list\",children:[isLoading&&skeletons.map(skeletonNum=>/*#__PURE__*/_jsx(LoadingMovieCard,{},skeletonNum)),sortedMovies.map(movie=>/*#__PURE__*/_jsx(MovieCard,{movie:movie,handleLike:handleLike},movie.id))]}),/*#__PURE__*/_jsx(\"button\",{onClick:handlePageChange,className:\"btn\",children:\"Load More\"})]})]});};export default MovieList;","map":{"version":3,"names":["React","useEffect","useState","useNavigate","axios","MovieCard","LoadingMovieCard","jsx","_jsx","jsxs","_jsxs","api_key","MovieList","_ref","likedMovies","setLikedMovies","handleLike","categories","setCategories","currentCategory","setCurrentCategory","movies","setMovies","sortingOption","setSortingOption","by","order","sortedMovies","setSortedMovies","isLoading","setIsLoading","pageNum","setPage","navigate","totalPages","setTotalPages","skeletons","fetch","concat","then","response","json","data","genres","handleCategoryClick","category","id","length","get","prevMovies","results","total_pages","console","log","handlePageChange","nextPage","handleOptionChange","event","name","value","target","prev","className","children","map","index","onClick","onChange","skeletonNum","movie"],"sources":["/Users/elinakirspile/moviefinder/src/components/Movies/MovieList.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport \"./MovieList.css\";\nimport MovieCard from \"./MovieCard\";\nimport LoadingMovieCard from \"./LoadingMovieCard\";\n\nconst api_key = \"f3855f8bdde19bb1dd9b18e80bc383b6\";\n\nconst MovieList = ({ likedMovies, setLikedMovies, handleLike }) => {\n  //manage the state of movies' categories\n  const [categories, setCategories] = useState([]);\n  const [currentCategory, setCurrentCategory] = useState([]);\n  const [movies, setMovies] = useState([]);\n  const [sortingOption, setSortingOption] = useState({\n    by: \"default\",\n    order: \"asc\",\n  });\n  const [sortedMovies, setSortedMovies] = useState([]);\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [pageNum, setPage] = useState(1);\n\n  const navigate = useNavigate();\n  const [totalPages, setTotalPages] = useState(0);\n\n  const skeletons = [\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n  ];\n\n  //MOVIES DATA FETCHING\n\n  //fetch movies' categories on the 1st components render\n  useEffect(() => {\n    fetch(`https://api.themoviedb.org/3/genre/movie/list?api_key=${api_key}`)\n      .then((response) => response.json())\n      .then((data) => {\n        setCategories(data.genres);\n      });\n  }, []);\n\n  //get the id of current category\n  const handleCategoryClick = (category) => {\n    setCurrentCategory(category.id);\n    setPage(1); //when state of the category changes, reset the page state to 1\n    setMovies([]); //when state of the category changes, empty movies array\n    setSortedMovies([]);\n    setSortingOption({ by: \"default\", order: \"asc\" });\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    if (currentCategory.length !== 0) {\n      axios\n        .get(\n          `https://api.themoviedb.org/3/discover/movie?api_key=${api_key}&with_genres=${currentCategory}&primary_release_date.gte=2000-01-01&primary_release_date.lte=2024-12-31&with_original_language=en&vote_count.gte=180.0&page=${pageNum}`\n        )\n        .then((response) => {\n          if (movies.length !== 0) {\n            setMovies((prevMovies) => [\n              ...prevMovies,\n              ...response.data.results,\n            ]);\n          } else {\n            setMovies(response.data.results);\n            setIsLoading(false);\n          }\n\n          setTotalPages(response.data.total_pages);\n          console.log(response.data);\n          //console.log(totalPages);\n          setIsLoading(false);\n        });\n    } else {\n      axios\n        .get(\n          `https://api.themoviedb.org/3/discover/movie?api_key=${api_key}&with_original_language=en&primary_release_date.gte=2000-01-01&primary_release_date.lte=2024-12-31&vote_count.gte=180.0&page=${pageNum}`\n        )\n        .then((response) => {\n          if (movies.length !== 0) {\n            setMovies((prevMovies) => [\n              ...prevMovies,\n              ...response.data.results,\n            ]);\n          } else {\n            setMovies(response.data.results);\n            setIsLoading(false);\n          }\n          setTotalPages(response.data.total_pages);\n\n          //console.log(totalPages);\n          setIsLoading(false);\n        });\n    }\n  }, [currentCategory, pageNum]);\n\n  //console.log(movies);\n\n  //handle Page Change\n\n  const handlePageChange = () => {\n    //check if movie data is available and page number is less than total pages number\n    if (!isLoading && movies && pageNum < totalPages) {\n      //increase the value of page by 1\n      const nextPage = pageNum + 1;\n      //set page state with the next page\n      setPage(nextPage);\n      //navigate to the next page, use nextPage instead of pageNum to navigate to correct new page\n      navigate(`?&with_genres=${currentCategory}&page=${nextPage}`);\n    }\n  };\n\n  //SORTING MOVIES FEATURE\n\n  //get movie sorting option\n  const handleOptionChange = (event) => {\n    const { name, value } = event.target;\n    setSortingOption((prev) => {\n      return { ...prev, [name]: value };\n    });\n    setSortedMovies([]);\n  };\n\n  //sort movies API request by sorting option\n  useEffect(() => {\n    if (sortingOption.by === \"release_date\" && sortingOption.order === \"asc\") {\n      axios\n        .get(\n          `https://api.themoviedb.org/3/discover/movie?api_key=${api_key}&with_genres=${currentCategory}&with_origin_country=US&sort_by=primary_release_date.asc&with_original_language=en&vote_count.gte=180.0&primary_release_date.gte=2000-01-01&primary_release_date.lte=2024-12-31&page=${pageNum}`\n        )\n        .then((response) => {\n          if (sortedMovies.length !== 0) {\n            setSortedMovies((prevMovies) => [\n              ...prevMovies,\n              ...response.data.results,\n            ]);\n          } else {\n            setSortedMovies(response.data.results);\n          }\n        });\n    } else if (\n      sortingOption.by === \"release_date\" &&\n      sortingOption.order === \"desc\"\n    ) {\n      axios\n        .get(\n          `https://api.themoviedb.org/3/discover/movie?api_key=${api_key}&with_genres=${currentCategory}&with_origin_country=US&sort_by=primary_release_date.desc&with_original_language=en&vote_count.gte=180.0&primary_release_date.gte=2000-01-01&primary_release_date.lte=2024-12-31&page=${pageNum}`\n        )\n        .then((response) => {\n          if (sortedMovies.length !== 0) {\n            setSortedMovies((prevMovies) => [\n              ...prevMovies,\n              ...response.data.results,\n            ]);\n          } else {\n            setSortedMovies(response.data.results);\n          }\n        });\n    } else if (\n      sortingOption.by === \"vote_average\" &&\n      sortingOption.order === \"asc\"\n    ) {\n      axios\n        .get(\n          `https://api.themoviedb.org/3/discover/movie?api_key=${api_key}&with_genres=${currentCategory}&with_origin_country=US&sort_by=vote_average.asc&with_original_language=en&vote_count.gte=180.0&primary_release_date.gte=2000-01-01&primary_release_date.lte=2024-12-31&page=${pageNum}`\n        )\n        .then((response) => {\n          if (sortedMovies.length !== 0) {\n            setSortedMovies((prevMovies) => [\n              ...prevMovies,\n              ...response.data.results,\n            ]);\n          } else {\n            setSortedMovies(response.data.results);\n          }\n        });\n    } else if (\n      sortingOption.by === \"vote_average\" &&\n      sortingOption.order === \"desc\"\n    ) {\n      axios\n        .get(\n          `https://api.themoviedb.org/3/discover/movie?api_key=${api_key}&with_genres=${currentCategory}&with_origin_country=US&sort_by=vote_average.desc&with_original_language=en&vote_count.gte=180.0&primary_release_date.gte=2000-01-01&primary_release_date.lte=2024-12-31&page=${pageNum}`\n        )\n        .then((response) => {\n          if (sortedMovies.length !== 0) {\n            setSortedMovies((prevMovies) => [\n              ...prevMovies,\n              ...response.data.results,\n            ]);\n          } else {\n            setSortedMovies(response.data.results);\n          }\n        });\n    } else {\n      setSortedMovies(movies);\n    }\n  }, [sortingOption, movies, currentCategory]);\n\n  //SAVING MOVIES TO WATCHLIST FEATURE\n\n  return (\n    <div className=\"movies_data_container\">\n      <div className=\"movie_categories\">\n        <ul className=\"categories\">\n          {categories.map((category, index) => (\n            <li\n              className={currentCategory === category.id ? \"active\" : \"\"}\n              key={index}\n              onClick={() => {\n                handleCategoryClick(category);\n              }}\n            >\n              {category.name}\n            </li>\n          ))}\n        </ul>\n\n        <div className=\"movie_options\">\n          <select\n            className=\"option\"\n            name=\"by\"\n            onChange={handleOptionChange}\n            value={sortingOption.by}\n          >\n            <option value=\"default\">Sort By</option>\n            <option value=\"release_date\">Release Date</option>\n            <option value=\"vote_average\">Rating</option>\n          </select>\n\n          <select\n            className=\"option\"\n            name=\"order\"\n            onChange={handleOptionChange}\n            value={sortingOption.order}\n          >\n            <option value=\"asc\">Asceding</option>\n            <option value=\"desc\">Descending</option>\n          </select>\n        </div>\n      </div>\n      <div>\n        <div className=\"movie_list\">\n          {isLoading &&\n            skeletons.map((skeletonNum) => (\n              <LoadingMovieCard key={skeletonNum} />\n            ))}\n\n          {sortedMovies.map((movie) => (\n            <MovieCard key={movie.id} movie={movie} handleLike={handleLike} />\n          ))}\n        </div>\n\n        <button onClick={handlePageChange} className=\"btn\">\n          Load More\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}