{"ast":null,"code":"var _jsxFileName = \"/Users/elinakirspile/moviesapp/src/components/Movies/MovieList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport _ from \"lodash\";\nimport \"./MovieList.css\";\nimport MovieCard from \"./MovieCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api_key = \"f3855f8bdde19bb1dd9b18e80bc383b6\";\n\n//\n\n//component for rendering movie objects\nconst MovieList = () => {\n  _s();\n  //manage the state of movies' categories\n\n  const [categories, setCategories] = useState([]);\n  const [currentCategory, setCurrentCategory] = useState([]);\n  const [movies, setMovies] = useState([]);\n  const [sortingOption, setSortingOption] = useState({\n    by: \"default\",\n    order: \"order_asc\"\n  });\n  const [likedMovies, setLikedMovies] = useState([]);\n  //fetch movies' categories on the 1st components render\n  useEffect(() => {\n    fetch(`https://api.themoviedb.org/3/genre/movie/list?api_key=${api_key}`).then(response => response.json()).then(data => {\n      setCategories(data.genres);\n    });\n  }, []);\n\n  //get the id of current category\n  const handleCategoryClick = category => {\n    setCurrentCategory(category.id);\n  };\n\n  //fetch movies of currently selected movies' category\n\n  useEffect(() => {\n    //check if there is currentCategory index or empty\n\n    fetch(`https://api.themoviedb.org/3/discover/movie?api_key=${api_key}&with_genres=${currentCategory}`).then(response => response.json()).then(data => setMovies(data.results));\n  }, [currentCategory]);\n\n  //get movie sorting option\n  const handleOptionChange = event => {};\n\n  //CODE FOR SORTING MOVIES\n\n  useEffect(() => {\n    if (sortingOption !== \"default\") {\n      const sortedMovies = _.orderBy(movies, [sortingOption]);\n      setMovies(sortedMovies);\n    }\n  }, [sortingOption]);\n\n  //get liked movie\n\n  const handleLike = movie => {\n    const addedMovies = [...likedMovies];\n    addedMovies.push({\n      movie: movie\n    });\n    setLikedMovies(addedMovies); //figure out how to not add movie that is already in likedMovies\n  };\n\n  //console.log(likedMovies);\n  console.log(sortingOption);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movies_data_container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie_categories\",\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"categories\",\n        children: categories.map((category, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: currentCategory == category.id ? \"active\" : \"\",\n          onClick: () => {\n            handleCategoryClick(category);\n          },\n          children: category.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie_options\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"by\",\n          className: \"option\",\n          onChange: handleOptionChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"default\",\n            children: \"Select Sorting Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"release_date\",\n            children: \"Release Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"movie_rate\",\n            children: \"Rating\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"option\",\n          onChange: handleOptionChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"order_asc\",\n            children: \"Asceding\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"order_desc\",\n            children: \"Descending\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie_list\",\n      children: movies === null || movies === void 0 ? void 0 : movies.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n        movie: movie,\n        handleLike: handleLike\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieList, \"bFxi/iZlC/o2EQuQf+DKlJXWjXg=\");\n_c = MovieList;\nexport default MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["React","useEffect","useState","_","MovieCard","jsxDEV","_jsxDEV","api_key","MovieList","_s","categories","setCategories","currentCategory","setCurrentCategory","movies","setMovies","sortingOption","setSortingOption","by","order","likedMovies","setLikedMovies","fetch","then","response","json","data","genres","handleCategoryClick","category","id","results","handleOptionChange","event","sortedMovies","orderBy","handleLike","movie","addedMovies","push","console","log","className","children","map","index","onClick","name","fileName","_jsxFileName","lineNumber","columnNumber","onChange","value","_c","$RefreshReg$"],"sources":["/Users/elinakirspile/moviesapp/src/components/Movies/MovieList.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport _ from \"lodash\";\n\nimport \"./MovieList.css\";\nimport MovieCard from \"./MovieCard\";\n\nconst api_key = \"f3855f8bdde19bb1dd9b18e80bc383b6\";\n\n//\n\n//component for rendering movie objects\nconst MovieList = () => {\n  //manage the state of movies' categories\n\n  const [categories, setCategories] = useState([]);\n  const [currentCategory, setCurrentCategory] = useState([]);\n  const [movies, setMovies] = useState([]);\n  const [sortingOption, setSortingOption] = useState({\n    by: \"default\",\n    order: \"order_asc\",\n  });\n  const [likedMovies, setLikedMovies] = useState([]);\n  //fetch movies' categories on the 1st components render\n  useEffect(() => {\n    fetch(`https://api.themoviedb.org/3/genre/movie/list?api_key=${api_key}`)\n      .then((response) => response.json())\n      .then((data) => {\n        setCategories(data.genres);\n      });\n  }, []);\n\n  //get the id of current category\n  const handleCategoryClick = (category) => {\n    setCurrentCategory(category.id);\n  };\n\n  //fetch movies of currently selected movies' category\n\n  useEffect(() => {\n    //check if there is currentCategory index or empty\n\n    fetch(\n      `https://api.themoviedb.org/3/discover/movie?api_key=${api_key}&with_genres=${currentCategory}`\n    )\n      .then((response) => response.json())\n      .then((data) => setMovies(data.results));\n  }, [currentCategory]);\n\n  //get movie sorting option\n  const handleOptionChange = (event) => {};\n\n  //CODE FOR SORTING MOVIES\n\n  useEffect(() => {\n    if (sortingOption !== \"default\") {\n      const sortedMovies = _.orderBy(movies, [sortingOption]);\n      setMovies(sortedMovies);\n    }\n  }, [sortingOption]);\n\n  //get liked movie\n\n  const handleLike = (movie) => {\n    const addedMovies = [...likedMovies];\n    addedMovies.push({ movie: movie });\n    setLikedMovies(addedMovies); //figure out how to not add movie that is already in likedMovies\n  };\n\n  //console.log(likedMovies);\n  console.log(sortingOption);\n  return (\n    <div className=\"movies_data_container\">\n      <div className=\"movie_categories\">\n        <ul className=\"categories\">\n          {categories.map((category, index) => (\n            <li\n              className={currentCategory == category.id ? \"active\" : \"\"}\n              key={index}\n              onClick={() => {\n                handleCategoryClick(category);\n              }}\n            >\n              {category.name}\n            </li>\n          ))}\n        </ul>\n        <div className=\"movie_options\">\n          <select name=\"by\" className=\"option\" onChange={handleOptionChange}>\n            <option value=\"default\">Select Sorting Type</option>\n            <option value=\"release_date\">Release Date</option>\n            <option value=\"movie_rate\">Rating</option>\n          </select>\n          <select className=\"option\" onChange={handleOptionChange}>\n            <option value=\"order_asc\">Asceding</option>\n            <option value=\"order_desc\">Descending</option>\n          </select>\n        </div>\n      </div>\n      <div className=\"movie_list\">\n        {movies?.map((movie) => (\n          <MovieCard key={movie.id} movie={movie} handleLike={handleLike} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default MovieList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}