{"ast":null,"code":"var _jsxFileName = \"/Users/elinakirspile/moviesapp/src/components/Movies/MovieList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useLocation, useNavigate, useSearchParams, useParams } from \"react-router-dom\";\nimport _ from \"lodash\";\nimport axios from \"axios\";\nimport \"./MovieList.css\";\nimport MovieCard from \"./MovieCard\";\nimport UseMoviesData from \"../../hooks/UseMoviesData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api_key = \"f3855f8bdde19bb1dd9b18e80bc383b6\";\n\n//\n\n//component for rendering movie objects\nconst MovieList = () => {\n  _s();\n  //manage the state of movies' categories\n  const [categories, setCategories] = useState([]);\n  const [currentCategory, setCurrentCategory] = useState([]);\n  const [movies, setMovies] = useState([]);\n  const [sortingOption, setSortingOption] = useState({\n    by: \"default\",\n    order: \"asc\"\n  });\n  const [likedMovies, setLikedMovies] = useState([]);\n  //get current parametrs of URL\n  const [searchParams, setSearch] = useSearchParams();\n  //get current page from URL\n  const [pageNum, setPage] = useState(1);\n  //const page = searchParams.get(\"page\");\n\n  const {\n    currentCategory: urlCategory,\n    pageNum: urlPage\n  } = useParams();\n  const navigate = useNavigate();\n\n  //MOVIES DATA FETCHING\n\n  //fetch movies' categories on the 1st components render\n  useEffect(() => {\n    fetch(`https://api.themoviedb.org/3/genre/movie/list?api_key=${api_key}`).then(response => response.json()).then(data => {\n      setCategories(data.genres);\n    });\n  }, []);\n\n  //fetch movies of currently selected movies' category\n\n  //const { data } = UseMoviesData(\n  //`https://api.themoviedb.org/3/discover/movie?api_key=${api_key}&with_genres=${currentCategory}`\n  //);\n\n  //get the id of current category\n  const handleCategoryClick = category => {\n    setCurrentCategory(category.id);\n  };\n  useEffect(() => {\n    //check if there is currentCategory index or empty\n    //fetch(\n    //`https://api.themoviedb.org/3/discover/movie?api_key=${api_key}&with_genres=${currentCategory}&page=${page}`\n    //)\n    //.then((response) => response.json())\n    //.then((data) => {\n    //console.log(data); //data stores parameters such as page number and total pages\n    //setMovies(data.results);\n    //});\n\n    //reset page parameter to 1 when category changes\n\n    if (currentCategory) {\n      axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=${api_key}&with_genres=${currentCategory}&page=${pageNum}`).then(response => {\n        setMovies(response.data.results);\n        console.log(response.data);\n      });\n    } else {\n      axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=${api_key}&page=${pageNum}`).then(response => {\n        setMovies(response.data.results);\n        console.log(response.data);\n      });\n      i;\n    }\n  }, [currentCategory, pageNum]);\n\n  //RESETING PAGE URL PARAMETERS\n\n  useEffect(() => {\n    //if (page) {\n    // setPage(parseInt(page));\n    //console.log(\"Current Page is\", page);\n    //} else {\n    //setSearch({ page: \"1\" });\n    //}\n    console.log(urlCategory);\n    setCurrentCategory(urlCategory);\n    setPage(Number(urlPage) || 1);\n    axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=${api_key}&with_genres=${currentCategory}&page=${pageNum}`).then(response => {\n      setMovies(response.data.results);\n      console.log(response.data);\n    });\n  }, [urlCategory, urlPage]);\n\n  //handle Page Change\n\n  const handlePageChange = () => {\n    //const currentParams = Object.fromEntries([...searchParams]);\n    //console.log(currentParams);\n    //setSearch({ ...currentParams, page: parseInt(currentParams.page) + 1 });\n    setPage(pageNum + 1);\n    navigate(`https://api.themoviedb.org/3/discover/movie?api_key=${api_key}&with_genres=${currentCategory}&page=${pageNum + 1}`);\n  };\n\n  //SORTING MOVIES FEATURE\n\n  //get movie sorting option\n  const handleOptionChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setSortingOption(prev => {\n      return {\n        ...prev,\n        [name]: value\n      };\n    });\n  };\n  console.log(sortingOption);\n\n  //sort movies by sorting option with lodash library\n\n  useEffect(() => {\n    if (sortingOption.by !== \"default\") {\n      const sortedMovies = _.orderBy(movies, [sortingOption.by], [sortingOption.order]);\n      setMovies(sortedMovies);\n    }\n  }, [sortingOption]);\n\n  //SAVING FAVOURITE MOVIES FEATURE\n\n  //get liked movie\n  const handleLike = movie => {\n    const addedMovies = [...likedMovies];\n    addedMovies.push({\n      movie: movie\n    });\n    setLikedMovies(addedMovies); //figure out how to not add movie that is already in likedMovies\n  };\n\n  //console.log(likedMovies);\n\n  //INFINITE SCROLLING FEATURE\n\n  useEffect(() => {\n    const handleScroll = () => {\n      const {\n        scrollTop,\n        clientHeight,\n        scrollHeight\n      } = document.documentElement;\n      if (scrollTop + clientHeight >= scrollHeight - 1) {\n        console.log(\"Reached to Bottom\");\n      }\n    };\n\n    //add event listener for listening to scroll event\n    window.addEventListener(\"scroll\", handleScroll);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movies_data_container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie_categories\",\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"categories\",\n        children: categories.map((category, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: currentCategory == category.id ? \"active\" : \"\",\n          onClick: () => {\n            handleCategoryClick(category);\n          },\n          children: category.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie_options\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"option\",\n          name: \"by\",\n          onChange: handleOptionChange,\n          value: sortingOption.by,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"default\",\n            children: \"Sort By\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"release_date\",\n            children: \"Release Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"vote_average\",\n            children: \"Rating\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"option\",\n          name: \"order\",\n          onChange: handleOptionChange,\n          value: sortingOption.order,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"asc\",\n            children: \"Asceding\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"desc\",\n            children: \"Descending\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie_list\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n        movie: movie,\n        handleLike: handleLike\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handlePageChange(2),\n      children: \"Page 3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieList, \"sAZfbC4ERYQYeJKeiGMYYTu7Ld4=\", false, function () {\n  return [useSearchParams, useParams, useNavigate];\n});\n_c = MovieList;\nexport default MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","useNavigate","useSearchParams","useParams","_","axios","MovieCard","UseMoviesData","jsxDEV","_jsxDEV","api_key","MovieList","_s","categories","setCategories","currentCategory","setCurrentCategory","movies","setMovies","sortingOption","setSortingOption","by","order","likedMovies","setLikedMovies","searchParams","setSearch","pageNum","setPage","urlCategory","urlPage","navigate","fetch","then","response","json","data","genres","handleCategoryClick","category","id","get","results","console","log","i","Number","handlePageChange","handleOptionChange","event","name","value","target","prev","sortedMovies","orderBy","handleLike","movie","addedMovies","push","handleScroll","scrollTop","clientHeight","scrollHeight","document","documentElement","window","addEventListener","className","children","map","index","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onChange","_c","$RefreshReg$"],"sources":["/Users/elinakirspile/moviesapp/src/components/Movies/MovieList.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  useLocation,\n  useNavigate,\n  useSearchParams,\n  useParams,\n} from \"react-router-dom\";\n\nimport _ from \"lodash\";\nimport axios from \"axios\";\nimport \"./MovieList.css\";\nimport MovieCard from \"./MovieCard\";\nimport UseMoviesData from \"../../hooks/UseMoviesData\";\n\nconst api_key = \"f3855f8bdde19bb1dd9b18e80bc383b6\";\n\n//\n\n//component for rendering movie objects\nconst MovieList = () => {\n  //manage the state of movies' categories\n  const [categories, setCategories] = useState([]);\n  const [currentCategory, setCurrentCategory] = useState([]);\n  const [movies, setMovies] = useState([]);\n  const [sortingOption, setSortingOption] = useState({\n    by: \"default\",\n    order: \"asc\",\n  });\n  const [likedMovies, setLikedMovies] = useState([]);\n  //get current parametrs of URL\n  const [searchParams, setSearch] = useSearchParams();\n  //get current page from URL\n  const [pageNum, setPage] = useState(1);\n  //const page = searchParams.get(\"page\");\n\n  const { currentCategory: urlCategory, pageNum: urlPage } = useParams();\n  const navigate = useNavigate();\n\n  //MOVIES DATA FETCHING\n\n  //fetch movies' categories on the 1st components render\n  useEffect(() => {\n    fetch(`https://api.themoviedb.org/3/genre/movie/list?api_key=${api_key}`)\n      .then((response) => response.json())\n      .then((data) => {\n        setCategories(data.genres);\n      });\n  }, []);\n\n  //fetch movies of currently selected movies' category\n\n  //const { data } = UseMoviesData(\n  //`https://api.themoviedb.org/3/discover/movie?api_key=${api_key}&with_genres=${currentCategory}`\n  //);\n\n  //get the id of current category\n  const handleCategoryClick = (category) => {\n    setCurrentCategory(category.id);\n  };\n\n  useEffect(() => {\n    //check if there is currentCategory index or empty\n    //fetch(\n    //`https://api.themoviedb.org/3/discover/movie?api_key=${api_key}&with_genres=${currentCategory}&page=${page}`\n    //)\n    //.then((response) => response.json())\n    //.then((data) => {\n    //console.log(data); //data stores parameters such as page number and total pages\n    //setMovies(data.results);\n    //});\n\n    //reset page parameter to 1 when category changes\n\n    if (currentCategory) {\n      axios\n        .get(\n          `https://api.themoviedb.org/3/discover/movie?api_key=${api_key}&with_genres=${currentCategory}&page=${pageNum}`\n        )\n        .then((response) => {\n          setMovies(response.data.results);\n          console.log(response.data);\n        });\n    } else {\n      axios\n        .get(\n          `https://api.themoviedb.org/3/discover/movie?api_key=${api_key}&page=${pageNum}`\n        )\n        .then((response) => {\n          setMovies(response.data.results);\n          console.log(response.data);\n        });\n      i;\n    }\n  }, [currentCategory, pageNum]);\n\n  //RESETING PAGE URL PARAMETERS\n\n  useEffect(() => {\n    //if (page) {\n    // setPage(parseInt(page));\n    //console.log(\"Current Page is\", page);\n    //} else {\n    //setSearch({ page: \"1\" });\n    //}\n    console.log(urlCategory);\n    setCurrentCategory(urlCategory);\n\n    setPage(Number(urlPage) || 1);\n    axios\n      .get(\n        `https://api.themoviedb.org/3/discover/movie?api_key=${api_key}&with_genres=${currentCategory}&page=${pageNum}`\n      )\n      .then((response) => {\n        setMovies(response.data.results);\n        console.log(response.data);\n      });\n  }, [urlCategory, urlPage]);\n\n  //handle Page Change\n\n  const handlePageChange = () => {\n    //const currentParams = Object.fromEntries([...searchParams]);\n    //console.log(currentParams);\n    //setSearch({ ...currentParams, page: parseInt(currentParams.page) + 1 });\n    setPage(pageNum + 1);\n    navigate(\n      `https://api.themoviedb.org/3/discover/movie?api_key=${api_key}&with_genres=${currentCategory}&page=${\n        pageNum + 1\n      }`\n    );\n  };\n\n  //SORTING MOVIES FEATURE\n\n  //get movie sorting option\n  const handleOptionChange = (event) => {\n    const { name, value } = event.target;\n    setSortingOption((prev) => {\n      return { ...prev, [name]: value };\n    });\n  };\n  console.log(sortingOption);\n\n  //sort movies by sorting option with lodash library\n\n  useEffect(() => {\n    if (sortingOption.by !== \"default\") {\n      const sortedMovies = _.orderBy(\n        movies,\n        [sortingOption.by],\n        [sortingOption.order]\n      );\n      setMovies(sortedMovies);\n    }\n  }, [sortingOption]);\n\n  //SAVING FAVOURITE MOVIES FEATURE\n\n  //get liked movie\n  const handleLike = (movie) => {\n    const addedMovies = [...likedMovies];\n    addedMovies.push({ movie: movie });\n    setLikedMovies(addedMovies); //figure out how to not add movie that is already in likedMovies\n  };\n\n  //console.log(likedMovies);\n\n  //INFINITE SCROLLING FEATURE\n\n  useEffect(() => {\n    const handleScroll = () => {\n      const { scrollTop, clientHeight, scrollHeight } =\n        document.documentElement;\n      if (scrollTop + clientHeight >= scrollHeight - 1) {\n        console.log(\"Reached to Bottom\");\n      }\n    };\n\n    //add event listener for listening to scroll event\n    window.addEventListener(\"scroll\", handleScroll);\n  }, []);\n\n  return (\n    <div className=\"movies_data_container\">\n      <div className=\"movie_categories\">\n        <ul className=\"categories\">\n          {categories.map((category, index) => (\n            <li\n              className={currentCategory == category.id ? \"active\" : \"\"}\n              key={index}\n              onClick={() => {\n                handleCategoryClick(category);\n              }}\n            >\n              {category.name}\n            </li>\n          ))}\n        </ul>\n        <div className=\"movie_options\">\n          <select\n            className=\"option\"\n            name=\"by\"\n            onChange={handleOptionChange}\n            value={sortingOption.by}\n          >\n            <option value=\"default\">Sort By</option>\n            <option value=\"release_date\">Release Date</option>\n            <option value=\"vote_average\">Rating</option>\n          </select>\n          <select\n            className=\"option\"\n            name=\"order\"\n            onChange={handleOptionChange}\n            value={sortingOption.order}\n          >\n            <option value=\"asc\">Asceding</option>\n            <option value=\"desc\">Descending</option>\n          </select>\n        </div>\n      </div>\n      <div className=\"movie_list\">\n        {movies.map((movie) => (\n          <MovieCard key={movie.id} movie={movie} handleLike={handleLike} />\n        ))}\n      </div>\n      <button onClick={() => handlePageChange(2)}>Page 3</button>\n    </div>\n  );\n};\n\nexport default MovieList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}